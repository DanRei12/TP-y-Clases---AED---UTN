__Author__ = 'G184'

    # Enunciado...
'''
Una tienda de libros electr√≥nicos nos solicita ayuda para desarrollar un sistema de gesti√≥n de sus productos. De cada libro se conoce:

- C√≥digo de identificaci√≥n o ISBN (cadena de caracteres).
- T√≠tulo.
- G√©nero (0: Autoayuda, 1:Arte, 2: Ficci√≥n, 3: Computaci√≥n, 4: Econom√≠a, 5: Escolar, 6: Sociedad, 7: - - -   - - Gastronom√≠a, 8: Infantil , 9: Otros).
- Idioma (1: espa√±ol, 2: ingl√©s, 3: franc√©s, 4:italiano, 5:otros).
- Precio.

Se solicita un programa controlado por men√∫ de opciones que permita lo siguiente:

1.) Generaci√≥n y Carga: Generar un arreglo unidimensional con los n libros que ofrece la librer√≠a (n es un valor que se ingresa por teclado). Para el presente pr√°ctico se solicita que el usuario pueda optar por una carga manual (validando los datos de entrada) o por una carga autom√°tica de los datos de cada libro.
Se debe tener en cuenta que el International Standard Book Number (ISBN) es un identificador √∫nico para libros creado para uso comercial. Se cre√≥ en 1966 en el Reino Unido y alcanz√≥ el rango de est√°ndar internacional en 1970. Todas las ediciones y variaciones de un libro reciben un ISBN de 10 d√≠gitos dividido en los cuatro grupos que se indican a continuaci√≥n (sin longitud fija por cada grupo) separados por guiones ("-"):

- C√≥digo de pa√≠s o lengua de origen.
- C√≥digo del editor (asignado por la agencia nacional del ISBN).
- N√∫mero del art√≠culo (elegido por el editor).
- D√≠gito de control.

2.) Mostrar: Mostrar el vector generado en el punto anterior de tal manera que se muestre el g√©nero y el idioma del libro en lugar de los n√∫meros que los representan y se listen ordenados por t√≠tulo en forma ascendente. Cada libro debe mostrarse a raz√≥n de una l√≠nea por registro.

3.) Conteo y g√©nero m√°s popular: Determinar la cantidad de libros ofrecidos por g√©nero. Mostrar dichas cantidades y el g√©nero al que corresponde mostrando su nombre y no su c√≥digo. Determinar el g√©nero con mayor cantidad de libros ofrecidos, indicando su nombre. Si hubiera m√°s de un g√©nero con la misma cantidad, informar uno solo.

4.) B√∫squeda del mayor: Determinar y mostrar el libro de mayor precio para un idioma i, siendo i un valor que se ingresa por teclado. Si existiera m√°s de un libro con el mismo mayor precio mostrar s√≥lo uno.

5.) B√∫squeda por ISBN: Buscar si en el vector existe un libro con el ISBN x, siendo x un valor que se ingrese por teclado. Si existe mostrar sus datos y aumentar su precio un 10%. Si no existe, mostrar un mensaje por pantalla.

6.) Consulta de un g√©nero: Mostrar los datos de los libros del g√©nero con mayor cantidad de libros identificado en el punto 3. Dicho listado debe mostrarse ordenado por precio de mayor a menor.

7.) Consulta de precio por grupo: Esta funcionalidad permite a los alumnos secundarios cargar el listado de los ISBN correspondientes a los libros que el colegio les exige para el a√±o escolar. El sistema debe buscar cu√°les de estos libros se encuentran en su cat√°logo e indicar:

- Los libros que no se encontraron en el cat√°logo.
- Los libros que s√≠ se encontraron en el cat√°logo con su precio.
El precio total que el estudiante deber√≠a pagar para comprar aquellos libros que la librer√≠a vende.

'''
    # Imports...
import random
import time

    # Variables para el t√≠tulo...

Adjetivos = ['Salado', 'Grande', 'Juvenil', 'Dulce', 'Peque√±o', 'Comunista', 'Amargo', 'Diminuto', 'Infantil', '√Åcido', 'Seco','Capitalista', 'Rojo', 'Caro', 'Renacentista', 'Verde', 'Inteligente', 'Fotogr√°fico', 'Rubio', 'Divertido', 'Fuerte', 'Fiel', 'Poco', 'D√©bil', 'Agradable', 'Demasiado', 'Flexible', 'Sucio', 'Suficiente', 'Tostado', 'Limpio', 'Rojo', 'Ronco', 'Amable', 'Varios', 'N√≠tido','Nuevo', '√Åspero', 'Valiente', 'Suave', 'Hermoso', 'Rugoso', 'Largo', 'Esponjoso', 'Cruel', 'Flojo', 'Perfecto', 'Cierto', 'Redondo', 'Culto', 'Cuadrado', 'Ancho', 'Universitario', 'Musical', 'Semejante', 'Institucional', 'Democr√°tico', 'Art√≠stico', 'Individual', 'Religioso', 'Nacional', 'Cultural', 'Regional', 'Cualquiera', 'Estructural', 'Mundial', 'Policial', 'Econ√≥mico', 'Mensual',  'Pol√≠tico','Diario', 'Hist√≥rico', 'Solar', 'Civil', 'Militar', 'Familiar', 'Nuestro', 'Navide√±o', 'Industrial', 'Laboral', 'Naval', 'Vuestro', 'Mercantil', 'Agr√≠cola', 'Vanguardista', 'Colorado', 'Dental', 'Energ√©tico', 'Quir√∫rgico', 'Petrolero', 'Segundo', 'Primero', 'Ambiguo', 'Marinero', 'mÃ∏ÃøÃèaÃ∑ÃäÃÑlÃ¥ÃÇÃädÃµÕòÕëiÃ∑ÃåÕÅtÃ∂ÃáÕõoÃµÃéÃø']

Sustantivos = ['Vaca Lola', 'Sangre', 'Fant√°sma', 'Tendencia', 'Batalla', 'Polvo', 'Estrella', 'Crusada', 'Diamante', 'Irrompible', 'Viento', 'Oro', 'Piedra', 'Oceano', 'Acero', 'Pelota', 'Carrera', 'Le√≥n', 'Tierra', 'Parte', 'Ambiente', 'Castillo', 'Espada', 'Abrelatas', 'Jonathan', 'Disposici√≥n', 'Parlante', 'Aire', 'Mesa', 'Respiraci√≥n', 'PC', 'Libros', 'Escuela', 'Pelusa', 'Andr√©s', 'William', 'Esfera', 'Perif√©rico', 'Animal', 'Esquina', 'Perro', 'Casco', 'Caesar', 'Felipe', 'Piscinas', 'Pasto', 'Cuaderno', 'Planta', 'Argentina', 'Silvio', '√Åtomo', 'Paris', 'Joseph', 'Posavasos', 'Jorge', 'Bel√©n', 'Capital', 'Interior', 'Galleta', 'Programa', 'Valerio', 'Candela', 'Puerta', 'Bot√≥n', 'Guitarra', 'Qu√≠mica', 'Brasil', 'Hoja', 'Rect√°ngulo', 'Jap√≥n', 'Idea', 'Ropa', 'Cable', 'Milton', 'Silla', 'Calculadora', 'Juguete', 'Sonido', 'Carpeta', 'Julio', 'Algoritmo', 'Cartera', 'Esmeralda', 'Suciedad', 'Celular', 'JoJo', 'Loros', 'Sustancia', 'Cerradura', 'Ca√±averal', 'Televidente', 'C√©sped', 'Manantial', 'Televisor', 'Inglaterra', 'Daniel', 'Tierra', 'Notebook', 'Mausoleo', 'Tigre', 'C√≠rculo', 'Mesa', 'Nikol√°s', 'Ciudad', 'EEUU', 'Trabajador', 'Ciruela', 'Mol√©cula', 'Trabajo', 'Claridad', 'Rat√≥n', 'Tri√°ngulo', 'Clavel', 'Mueble', 'Tulip√°n', 'Competencia', 'M√°scara', 'Alex', 'Utensilio', 'Computadora', 'Notas', 'Vaso', 'Cuerda', 'Nueva York', 'Ventana', 'Manicomio', 'Tel√©fono', 'Vidrio', 'Asiento', 'Pantalla', 'Viol√≠n', 'Bater√≠a', 'Vigilante', 'Visita', 'Manhattan', 'Gato']

Genero = ['Autoayuda', 'Arte', 'Ficci√≥n', 'Computaci√≥n', 'Econom√≠a', 'Escolar', 'Sociedad', 'Gastronom√≠a', 'Infantil', 'Otros']
Idioma = ['None', 'Espa√±ol','Ingl√©s', 'Franc√©s', 'Italiano', 'Otros']

# FUNCIONES.

    # Funci√≥n precios...
def gen_presio():
    precio = random.randint(200, 10000)
    return precio

    # Funci√≥n para ordenar t√≠tulos...
def titlesort(tit, lang, gend):
    sorted = False
    while not sorted:
        sorted = True
        for i in range(0, len(tit) - 1):
            if tit[i] > tit[i+1]:
                tit[i], tit[i+1] = tit[i+1], tit[i]
                gend[i], gend[i+1] = gend[i+1], gend[i]
                lang[i], lang[i+1] = lang[i+1], lang[i]
                sorted = False

    # Funci√≥n para ordenar precios...
def pricesort(isbn, tit, gend, lang, pric, n):
    sorted = False
    while not sorted:
        sorted = True
        for i in range(0, len(pric) - 1):
            if pric[i] < pric[i+1]:
                isbn[i], isbn[i+1] = isbn[i+1], isbn[i]
                tit[i], tit[i+1] = tit[i+1], tit[i]
                gend[i], gend[i+1] = gend[i+1], gend[i]
                lang[i], lang[i+1] = lang[i+1], lang[i]
                pric[i], pric[i+1] = pric[i+1], pric[i]
                sorted = False

    # Funci√≥n para implementar en la funci√≥n verif...
def is_numb(car):
    return car in '0123456789'

    # Funci√≥n para verificar c√≥digo...
def verif():
    isbn_m = ()
    n = []
    o = 0
    pol = 0
    while o == 0:
        isbn_m = str(input('Ingrese el ISBN del libro: '))
        isbn_m.lower()
        if len(isbn_m) == 13:
            o = 1
            for car in isbn_m:
                n.append(car)
                if car in 'abcdefghijklmn√±opqrstuvwxyz':
                    pol = 1
                else:
                    continue
            if pol == 1:
                o = 0
                print('ISBN contiene letras y/o espacios.\n'
                'Por favor, introduzca el ISBN nuevamente.')
            elif pol == 0:
                if n[2] == '-' and n[7] == '-' and n[11] == '-':
                    n.remove(n[2])
                    n.remove(n[6])
                    n.remove(n[9])
                    if is_numb(car):
                        for i in range(0, len(n)):
                            n[i] = int(n[i])
                        if (10*n[0] + 9*n[1] + 8*n[2] + 7*n[3] + 6*n[4] + 5*n[5] + 4*n[6] + 3*n[7] + 2*n[8] + n[9]) % 11 == 0:
                            return('Verificado.', isbn_m)
                        else:
                            o = 0
                            print('No contiene caracteres soportados.\n'
                            'Por favor, introduzca el ISBN nuevamente.')
                else:
                    o = 0
                    print('No contiene los separadores o no se separ√≥ correctamente.\n'
                    'Por favor, introduzca el ISBN nuevamente.')
        else:
            print('El ISBN no contiene caracteres suficientes o contiene caracteres de m√°s.\n'
            'Por favor, introduzca el ISBN nuevamente.')

    # Funci√≥n para generar ISBN autom√°ticamente...
def ISBN_gen():
    a = 0
    n = 10
    m = 0
    digitos = list()
    while a == 0:
        for i in range(n):
            digitos.append(random.randrange(9))
            m += digitos[i] * (10-i)
        if m % 11 == 0:
            a = 1
            for i in range(n):
                digitos[i] = str(digitos[i])
            ISBN = digitos[0] + digitos[1] + "-" + digitos[2] + digitos[3] + digitos[4] + digitos[5] + "-" +    digitos[6] + digitos[7] + digitos[8] + "-" + digitos[9]
            return ISBN
        else:
            a = 0

# MEN√ö DE OPCI√ìNES.
    # Funci√≥n principal, donde se ejecutan las dem√°s funciones...
def main():
    o = 0
    class Libros():
        pass
    while o != 8:
        tit = []
        gend = []
        lang = []
        pric = []
        isbn = []
        print('ùëªùíäùíÜùíèùíÖùíÇ ùíÖùíÜ ùë≥ùíäùíÉùíìùíêùíî ùë¨ùíçùíÜùíÑùíïùíìùíêùíèùíäùíÑùíêùíî.\n'
        'ùòöùò¶ùò≠ùò¶ùò§ùò§ùò™ùò∞ùòØùò¶ ùò¥ùò∂ ùò∞ùò±ùò§ùò™ùò∞ÃÅùòØ:\n'
        '1- Carga de libros (manualmente o autom√°ticamente).\n'
        '2- Mostrar libros.\n'
        '3- Ordenar por g√©nero.\n'
        '4- Ordernar por precio (Mayor a menor).\n'
        '5- Buscar libro por ISBN.\n'
        '6- Buscar libros por g√©nero.\n'
        '7- Verificar si se encuentran los libros a trav√©s del ISBN.\n'
        '8 - Salir.')

        o = int(input('Ingrese su elecci√≥n: '))

        # Opci√≥n 1, se genera ISBN...
        if o == 1:
            n = int(input('Ingrese la cantidad de libros a cargar: '))
            l = n * [None]
            op = str(input('Desea cargarlos manualmente (S/N): '))

            for i in range(n):
                l[i] = Libros()

                if op == 'n' or op == 'N':

                    l[i].Title = random.choice(Sustantivos) + " " + random.choice(Adjetivos) + "."
                    l[i].Code = ISBN_gen()
                    l[i].Gender = Genero[random.randrange(9)]
                    l[i].Language = Idioma[random.randrange(1, 5)]
                    l[i].Price = gen_presio()

                elif op == 's' or op == 'S':

                    l[i].Title = str(input('IÃ≤nÃ≤gÃ≤rÃ≤eÃ≤sÃ≤eÃ≤ eÃ≤lÃ≤ tÃ≤iÃ≤tÃ≤uÃ≤lÃ≤oÃ≤ dÃ≤eÃ≤lÃ≤ lÃ≤iÃ≤bÃ≤rÃ≤oÃ≤:Ã≤'))
                    l[i].Code = verif()
                    l[i].Gender = int(input('0 - Autoayuda.\n'
                                        '1 - Arte.\n'
                                        '2 - Ficci√≥n.\n'
                                        '3 - Computaci√≥n.\n'
                                        '4 - Econom√≠a.\n'
                                        '5 - Escolar.\n'
                                        '6 - Sociedad\n'
                                        '7 - Gastronom√≠a.\n'
                                        '8 - Infantil.\n'
                                        '9 - Otros.\n'
                                        'Ingrese el g√©nero del libro: '))
                    l[i].Language = int(input('1 - Espa√±ol.\n'
                                        '2 - Ingl√©s. \n'
                                        '3 - Franc√©s. \n'
                                        '4 - Italiano. \n'
                                        '5 - Otros.\n'
                                        'Ingrese el lenguaje del libro: '))
                    while (l[i].Gender > 9) or (l[i].Gender < 0):
                        l[i].Gender = int(input('0 - Autoayuda.\n'
                                            '1 - Arte.\n'
                                            '2 - Ficci√≥n.\n'
                                            '3 - Computaci√≥n.\n'
                                            '4 - Econom√≠a.\n'
                                            '5 - Escolar.\n'
                                            '6 - Sociedad\n'
                                            '7 - Gastronom√≠a.\n'
                                            '8 - Infantil.\n'
                                            '9 - Otros.\n'
                                            'Ingrese el g√©nero del libro nuevamente: '))
                    while (l[i].Language > 5) or (l[i].Language < 0):
                        l[i].Language = int(input('1 - Espa√±ol.\n'
                                            '2 - Ingl√©s. \n'
                                            '3 - Franc√©s. \n'
                                            '4 - Italiano. \n'
                                            '5 - Otros.\n'
                                            'Ingrese el lenguaje del libro nuevamente: '))
                    l[i].Price = int(input('Ingrese el valor del libro: '))
                    print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

        # Opci√≥n 2, se muestran los libros...
        if o == 2:
            for i in range(n):
                tit.append(l[i].Title)
                gend.append(l[i].Gender)
                lang.append(l[i].Language)
            sort = titlesort(tit, lang, gend)
            for i in range(len(tit)):
                print('T√≠tulo:', tit[i], 'G√©nero:', gend[i], 'Idioma:', lang[i], '\n')

            print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

        # Opci√≥n 3, se ordena por g√©nero...
        if o == 3:
            cont = [0] * 10
            may = 0
            mayor = 0
            for i in range(10):
                for j in range(n):
                    if l[j].Gender == Genero[i]:
                        cont[i] += 1
                print('El g√©nero', Genero[i], 'tiene', cont[i], 'libros.')

            for i in range(10):
                if cont[i] > mayor:
                    may = i
                    mayor = cont[i]
            print('El g√©nero con mayor cantidad de libros es el de', Genero[may], 'con una cantidad de', cont[may], 'libros.')
            print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

        # Opci√≥n 4, donde se buscar el libro con mayor precio con respecto a su idioma...
        if o == 4:
            may = 0
            mayor = 0
            LangSelect= int(input('1 - Espa√±ol.\n'
                                    '2 - Ingl√©s.\n'
                                    '3 - Franc√©s.\n'
                                    '4 - Italiano.\n'
                                    '5 - Otros.\n'
                                    'Ingrese los libros de que g√©nero desea mostrar: '))
            for i in range(n):
                pric.append(l[i].Price)
                lang.append(l[i].Language)
                tit.append(l[i].Title)

            for i in range(5):
                if LangSelect == i:
                    LangSelect = Idioma[i]
                    print('Los libros del idioma', LangSelect, 'son los siguientes:')
                    for j in range(n):
                        if l[j].Language == LangSelect:
                            print('Titulo: ', l[j].Title, 'Idioma: ', l[j].Language, 'Precio:', l[j].Price)
                            if l[j].Price > mayor:
                                mayor = l[j].Price
                                may = j
            print('\nEl libro m√°s caro del idioma', LangSelect, 'es el', l[may].Title, 'con un precio de', mayor)
            print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

        # Opci√≥n 5, donde buscamos un libro por su ISBN y le aumentamos un 10% su precio...
        if o == 5:
            isbnb = input('Ingresar el ISBN (con el modelo 00-0000-000-0): ')
            band_isbn = True
            for i in range(n):
                isbn.append(l[i].Code)
                tit.append(l[i].Title)
                gend.append(l[i].Gender)
                lang.append(l[i].Language)
                pric.append(l[i].Price)

            for i in range(n):
                if isbnb == isbn[i]:

                    print('Titulo:', tit[i],'\n' , 'ISBN:', isbn[i], '\n' , 'G√©nero:', gend[i], '\n' ,'Idioma:', lang[i], 'Precio original:', pric[i])
                    pric[i] = (pric[i]) + (10 * pric[i] // 100)
                    print('\nSu precio aumento un 10% por lo que ahora mismo vale', pric[i])
                    band_isbn = False

            if band_isbn:
                print('El libro que esta buscando no se encuentra en la base de datos.')
            print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

        # Opci√≥n 6, consultar por g√©nero...
        if o == 6:
            GenSelect= int(input('0 - Autoayuda.\n'
                                    '1 - Arte.\n'
                                    '2 - Ficci√≥n.\n'
                                    '3 - Computaci√≥n.\n'
                                    '4 - Econom√≠a.\n'
                                    '5 - Escolar.\n'
                                    '6 - Sociedad\n'
                                    '7 - Gastronom√≠a.\n'
                                    '8 - Infantil.\n'
                                    '9 - Otros.\n'
                                    'Ingrese los libros de que g√©nero desea mostrar: '))
            for i in range(n):
                isbn.append(l[i].Code)
                tit.append(l[i].Title)
                gend.append(l[i].Gender)
                lang.append(l[i].Language)
                pric.append(l[i].Price)
            sort = pricesort(isbn, tit, lang, gend, pric, n)
            for i in range(10):
                if GenSelect == i:
                    GenSelect = Genero[i]
                    print('Los libros del g√©nero', GenSelect, 'son los siguientes:')
                    for j in range(len(pric)):
                        if gend[j] == GenSelect:
                            print('Titulo: ', tit[j], 'G√©nero: ', gend[j], 'ISBN:', isbn[j], 'Idioma: ', lang[j], 'Precio:', pric[j])

            print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

        # Opci√≥n 7, se ingresan una cierta cantidad de ISBN y se busca en los ISBN cargados anteriormente...
        if o == 7:
            for i in range(n):
                isbn.append(l[i].Code)
                tit.append(l[i].Title)
                pric.append(l[i].Price)

            isbnal = []
            x = int(input('Ingresar la cantidad de ISBN que buscar√°: '))
            total_price = 0
            band_isbnal = True
            for i in range(x):
                isbna = input('Ingresar el ISBN (con el modelo 00-0000-000-0): ')
                isbnal.append(isbna)
            for i in range(x):
                for j in (range(n)):
                    if isbnal[i] == isbn[j]:
                        band_isbnal = False
                        print('Se encontro', tit[j], 'en el cat√°logo y su precio es:', pric[j])
                        total_price += pric[i]
                if band_isbnal:
                    print('No se encontr√≥ el libro en el cat√°logo.')

            print('El total a pagar por el estudiante es de', total_price)
            print(input("\nùôãùôßùôöùô®ùôûùô§ùô£ùôö ùôÄùôâùôèùôÄùôç ùô•ùôñùôßùôñ ùôòùô§ùô£ùô©ùôûùô£ùô™ùôñùôß..."))

    # Main script...
if __name__ == "__main__":
    main()
# Messi
